{# This file is part of the Accard package. #}

{# (c) University of Pennsylvania #}

{# For the full copyright and license information, please view the LICENSE #}
{# file that was distributed with this source code. #}

{% extends 'AccardWebBundle:Backend:layout.html.twig' %}

{% from 'AccardWebBundle:Common/Macros:alerts.html.twig' import no_javascript %}
{% from 'AccardWebBundle:Common/Macros:actions.html.twig' import update %}
{% from 'AccardWebBundle:Common/Macros:misc.html.twig' import page_title %}

{% block content %}
    {{ page_title('accard.interface.backend.titles.update_option'|trans({ '%option%': option })) }}

    {{ no_javascript() }}
    {{ form_errors(form) }}
    
    <form action="{{ path('accard_backend_option_update', { id: option.id }) }}" method="post" {{ form_enctype(form) }}>
        <input type="hidden" name="_method" value="PUT">
        {{ form_widget(form._token) }}
        {% include 'AccardWebBundle:Backend/Option:form.html.twig' %}
        <hr>
        <div class="row">
            <div class="col-md-12">
                <span class="pull-right">{{ update() }}</span>
            </div>
        </div>
    </form>
{% endblock %}

{% block page_javascripts %}

<script type="text/javascript">
    var former = Accard.get("form");
    var manager = new former($('form'));
    var addOptionValue = $('#add-option-value');

    manager
        .behavior('presentation', {
            target: 'name',
            condition: 'changed',
            action: 'slug',
            event: 'keyup'
        })
        .collection("#option-values", {
            adder: addOptionValue,
            startup: function(collection) {
                var field = $(this).find('input[type="checkbox"]').first();
                var nameField = $(this).find('input[type="text"]').first();
                var lockArea = $(this).find('.lock').first();
                var checked = field.prop('checked');

                icon = $('<a href="#"><i class="fa fa-'+(checked ? 'lock' : 'unlock')+'"></i></a>');

                field.addClass('sr-only');
                nameField.prop('readonly', checked);
                lockArea.prepend(icon);
            }
        })
        .bindAll();

    $('#option-values').on('click', '.lock > a', function(event) {
        var parent = $(this).parents('.lockable').first();
        var field = parent.find('input[type="checkbox"]').first();
        var nameField = parent.find('input[type="text"]').first();
        var icon = $(this).find('i').first();

        // If locked, unlock.
        if (field.prop('checked')) {
            field.prop('checked', false);
            nameField.prop('readonly', false);
            icon.removeClass('fa-lock').addClass('fa-unlock');
        } else {
            field.prop('checked', true);
            nameField.prop('readonly', true);
            icon.removeClass('fa-unlock').addClass('fa-lock');
        }
    });

</script>

{% endblock %}