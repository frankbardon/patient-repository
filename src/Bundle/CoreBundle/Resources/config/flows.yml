# This file is part of the Accard package.
#
# (c) University of Pennsylvania
#
# For the full copyright and license information, please view the LICENSE
# file that was distributed with this source code.

parameters:

    accard.flow.step.dump.class: Accard\Bundle\CoreBundle\Flow\Step\DumpStep

    accard.flow.scenario.basic_patient.class: Accard\Bundle\CoreBundle\Flow\Scenario\BasicPatientScenario
    accard.flow.step.select_patient_diagnosis.class: Accard\Bundle\CoreBundle\Flow\Step\SelectPatientDiagnosisStep
    accard.flow.step.select_regimen.class: Accard\Bundle\CoreBundle\Flow\Step\SelectRegimenStep

    accard.flow.scenario.create_regimen.class: Accard\Bundle\CoreBundle\Flow\Scenario\CreateRegimenScenario
    accard.flow.step.create_patient.class: Accard\Bundle\CoreBundle\Flow\Step\CreatePatientStep
    accard.flow.step.create_diagnosis_phases.class: Accard\Bundle\CoreBundle\Flow\Step\CreateDiagnosisPhasesStep
    accard.flow.step.create_diagnosis.class: Accard\Bundle\CoreBundle\Flow\Step\CreateDiagnosisStep
    accard.flow.step.create_pre_existing_conditions.class : Accard\Bundle\CoreBundle\Flow\Step\CreatePreExistingConditionsStep
    accard.flow.step.finalize_patient.class: Accard\Bundle\CoreBundle\Flow\Step\FinalizePatientStep

services:

    accard.flow.step.dump:
        class: %accard.flow.step.dump.class%
        tags: [{ name: accard.flow.step, alias: dump }]

    accard.flow.scenario.basic_patient:
        class: %accard.flow.scenario.basic_patient.class%
        arguments:
            - "@accard.manager.patient"
        tags:
            - { name: accard.flow.scenario, alias: basic_patient }

    accard.flow.step.select_patient_diagnosis:
        class: %accard.flow.step.select_patient_diagnosis.class%
        tags: [{ name: accard.flow.step, alias: select_patient_diagnosis }]

    accard.flow.step.select_regimen:
        class: %accard.flow.step.select_regimen.class%
        tags: [{ name: accard.flow.step, alias: select_regimen }]

    accard.flow.scenario.create_regimen:
        class: %accard.flow.scenario.create_regimen.class%
        arguments:
            - @accard.manager.regimen
        tags: [{ name: accard.flow.scenario, alias: create_regimen }]

    accard.flow.step.create_diagnosis_phases:
        class: %accard.flow.step.create_diagnosis_phases.class%
        arguments:
            - %accard.model.patient.class%
            - %accard.model.diagnosis.class%
        tags:
            - { name: accard.flow.step, alias: create_diagnosis_phases }

    accard.flow.step.create_patient:
        class: %accard.flow.step.create_patient.class%
        arguments:
            - @accard.repository.patient
            - %accard.model.patient.class%
        tags:
            - { name: accard.flow.step, alias: create_patient }

    accard.flow.step.create_diagnosis:
        class: %accard.flow.step.create_diagnosis.class%
        arguments:
            - @accard.repository.diagnosis
            - %accard.model.diagnosis.class%
        tags:
            - { name: accard.flow.step, alias: create_diagnosis }

    accard.flow.step.finalize_patient:
        class: %accard.flow.step.finalize_patient.class%
        arguments:
            - %accard.model.patient.class%
            - %accard.model.diagnosis.class%
        tags:
            - { name: accard.flow.step, alias: finalize_patient }

    accard.flow.step.create_pre_existing_conditions:
        class: %accard.flow.step.create_pre_existing_conditions.class%
        arguments:
            - @accard.repository.diagnosis
            - %accard.model.diagnosis.class%
            - %accard.model.patient.class%
            - @accard.form.type.diagnosis
        tags:
            - { name: accard.flow.step, alias: create_pre_existing_conditions }
