<?php
$coverage = new PHP_CodeCoverage;
$coverage->setData(array (
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Exception/DrugGroupNotFoundException.php' => 
  array (
    30 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Exception\\DrugGroupNotFoundExceptionTest::testDrugGroupNotFoundExceptionMessageIsCorrectWithNumericField',
      1 => 'AccardTest\\Component\\Drug\\Exception\\DrugGroupNotFoundExceptionTest::testDrugGroupNotFoundExceptionMessageIsCorrectWithNullField',
      2 => 'AccardTest\\Component\\Drug\\Exception\\DrugGroupNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWhenFieldIsNotNumericAndFieldIsPresent',
    ),
    31 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Exception\\DrugGroupNotFoundExceptionTest::testDrugGroupNotFoundExceptionMessageIsCorrectWithNumericField',
    ),
    32 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Exception\\DrugGroupNotFoundExceptionTest::testDrugGroupNotFoundExceptionMessageIsCorrectWithNumericField',
      1 => 'AccardTest\\Component\\Drug\\Exception\\DrugGroupNotFoundExceptionTest::testDrugGroupNotFoundExceptionMessageIsCorrectWithNullField',
      2 => 'AccardTest\\Component\\Drug\\Exception\\DrugGroupNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWhenFieldIsNotNumericAndFieldIsPresent',
    ),
    33 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Exception\\DrugGroupNotFoundExceptionTest::testDrugGroupNotFoundExceptionMessageIsCorrectWithNullField',
    ),
    34 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Exception\\DrugGroupNotFoundExceptionTest::testDrugGroupNotFoundExceptionMessageIsCorrectWithNullField',
    ),
    35 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Exception\\DrugGroupNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWhenFieldIsNotNumericAndFieldIsPresent',
    ),
    37 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Exception\\DrugGroupNotFoundExceptionTest::testDrugGroupNotFoundExceptionMessageIsCorrectWithNumericField',
      1 => 'AccardTest\\Component\\Drug\\Exception\\DrugGroupNotFoundExceptionTest::testDrugGroupNotFoundExceptionMessageIsCorrectWithNullField',
      2 => 'AccardTest\\Component\\Drug\\Exception\\DrugGroupNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWhenFieldIsNotNumericAndFieldIsPresent',
    ),
  ),
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Model/DrugablePrototypeTrait.php' => 
  array (
    40 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugablePrototypeTraitTest::testDrugablePrototypeDoesNotAllowDrugByDefault',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugablePrototypeTraitTest::testDrugablePrototypeAllowDrugIsMutable',
    ),
    41 => NULL,
    48 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugablePrototypeTraitTest::testDrugablePrototypeAllowDrugIsMutable',
    ),
    50 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugablePrototypeTraitTest::testDrugablePrototypeAllowDrugIsMutable',
    ),
    51 => NULL,
    58 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugablePrototypeTraitTest::testDrugablePrototypeDrugGroupAcceptsDrugableInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugablePrototypeTraitTest::testDrugablePrototypeDrugGroupAcceptsNull',
    ),
    59 => NULL,
    66 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugablePrototypeTraitTest::testDrugablePrototypeDrugGroupAcceptsDrugableInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugablePrototypeTraitTest::testDrugablePrototypeDrugGroupAcceptsNull',
    ),
    68 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugablePrototypeTraitTest::testDrugablePrototypeDrugGroupAcceptsDrugableInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugablePrototypeTraitTest::testDrugablePrototypeDrugGroupAcceptsNull',
    ),
    69 => NULL,
  ),
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Exception/DrugException.php' => 
  array (
  ),
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Exception/DrugNotFoundException.php' => 
  array (
    30 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Exception\\DrugNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWithNumericField',
      1 => 'AccardTest\\Component\\Drug\\Exception\\DrugNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWithNullField',
      2 => 'AccardTest\\Component\\Drug\\Exception\\DrugNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWhenFieldIsNotNumericAndFieldIsPresent',
    ),
    31 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Exception\\DrugNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWithNumericField',
    ),
    32 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Exception\\DrugNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWithNumericField',
      1 => 'AccardTest\\Component\\Drug\\Exception\\DrugNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWithNullField',
      2 => 'AccardTest\\Component\\Drug\\Exception\\DrugNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWhenFieldIsNotNumericAndFieldIsPresent',
    ),
    33 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Exception\\DrugNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWithNullField',
    ),
    34 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Exception\\DrugNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWithNullField',
    ),
    35 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Exception\\DrugNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWhenFieldIsNotNumericAndFieldIsPresent',
    ),
    37 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Exception\\DrugNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWithNumericField',
      1 => 'AccardTest\\Component\\Drug\\Exception\\DrugNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWithNullField',
      2 => 'AccardTest\\Component\\Drug\\Exception\\DrugNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWhenFieldIsNotNumericAndFieldIsPresent',
    ),
  ),
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Model/DrugGroup.php' => 
  array (
    57 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupInterfaceIsFollowed',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugIsAccardResource',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testGroupIdIsUnsetOnCreation',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupNameIsMutable',
      4 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupPresentationIsMutable',
      5 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsIsInstanceOfArrayCollectionByDefault',
      6 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsCanAddDrugInterface',
      7 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsDoesNotAddDrugTwice',
      8 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDoesNotFindDrugWhenNotPresent',
      9 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupFindsDrugWhenPresent',
      10 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
      11 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugInterfaceIsFollowed',
      12 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsAccardResource',
      13 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIdIsUnsetOnCreation',
      14 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugNameIsMutable',
      15 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugPresentationIsMutable',
      16 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGenericAcceptsDrugInterface',
      17 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsGenericReturnsFalseWhenGenericPresent',
      18 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsGenericReturnsTrueWhenGenericIsNotPresent',
      19 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsIsInstanceOfArrayCollectionByDefault',
      20 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsCanAddDrugGroupInterface',
      21 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsDoesNotAddGroupTwice',
      22 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugDoesNotFindGroupWhenNotPresent',
      23 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsGroupWhenPresent',
      24 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveGroup',
      25 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandsIsInstanceOfArrayCollectionByDefault',
      26 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandCanAddDrugInterface',
      27 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandDoesNotAddBrandTwice',
      28 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugDoesNotFindBrandWhenNotPresent',
      29 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsBrandWhenPresent',
      30 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand',
      31 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenOnlyNameIsPresent',
      32 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenNameAndGenericIsPresent',
    ),
    58 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupInterfaceIsFollowed',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugIsAccardResource',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testGroupIdIsUnsetOnCreation',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupNameIsMutable',
      4 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupPresentationIsMutable',
      5 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsIsInstanceOfArrayCollectionByDefault',
      6 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsCanAddDrugInterface',
      7 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsDoesNotAddDrugTwice',
      8 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDoesNotFindDrugWhenNotPresent',
      9 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupFindsDrugWhenPresent',
      10 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
      11 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugInterfaceIsFollowed',
      12 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsAccardResource',
      13 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIdIsUnsetOnCreation',
      14 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugNameIsMutable',
      15 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugPresentationIsMutable',
      16 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGenericAcceptsDrugInterface',
      17 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsGenericReturnsFalseWhenGenericPresent',
      18 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsGenericReturnsTrueWhenGenericIsNotPresent',
      19 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsIsInstanceOfArrayCollectionByDefault',
      20 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsCanAddDrugGroupInterface',
      21 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsDoesNotAddGroupTwice',
      22 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugDoesNotFindGroupWhenNotPresent',
      23 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsGroupWhenPresent',
      24 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveGroup',
      25 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandsIsInstanceOfArrayCollectionByDefault',
      26 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandCanAddDrugInterface',
      27 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandDoesNotAddBrandTwice',
      28 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugDoesNotFindBrandWhenNotPresent',
      29 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsBrandWhenPresent',
      30 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand',
      31 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenOnlyNameIsPresent',
      32 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenNameAndGenericIsPresent',
    ),
    65 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testGroupIdIsUnsetOnCreation',
    ),
    66 => NULL,
    73 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupNameIsMutable',
    ),
    75 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupNameIsMutable',
    ),
    76 => NULL,
    83 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupNameIsMutable',
    ),
    84 => NULL,
    91 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupPresentationIsMutable',
    ),
    93 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupPresentationIsMutable',
    ),
    94 => NULL,
    101 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupPresentationIsMutable',
    ),
    102 => NULL,
    109 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsIsInstanceOfArrayCollectionByDefault',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsCanAddDrugInterface',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsDoesNotAddDrugTwice',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
    ),
    110 => NULL,
    117 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsCanAddDrugInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsDoesNotAddDrugTwice',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDoesNotFindDrugWhenNotPresent',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupFindsDrugWhenPresent',
      4 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
    ),
    118 => NULL,
    125 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsCanAddDrugInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsDoesNotAddDrugTwice',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupFindsDrugWhenPresent',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
    ),
    126 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsCanAddDrugInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsDoesNotAddDrugTwice',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupFindsDrugWhenPresent',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
    ),
    127 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsCanAddDrugInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsDoesNotAddDrugTwice',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupFindsDrugWhenPresent',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
    ),
    128 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsCanAddDrugInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsDoesNotAddDrugTwice',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupFindsDrugWhenPresent',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
    ),
    130 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsCanAddDrugInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsDoesNotAddDrugTwice',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupFindsDrugWhenPresent',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
    ),
    131 => NULL,
    138 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
    ),
    139 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
    ),
    140 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
    ),
    141 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
    ),
    143 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
    ),
    144 => NULL,
  ),
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Model/DrugGroupInterface.php' => 
  array (
  ),
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Model/DrugInterface.php' => 
  array (
  ),
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Model/Drug.php' => 
  array (
    71 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupInterfaceIsFollowed',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugIsAccardResource',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testGroupIdIsUnsetOnCreation',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupNameIsMutable',
      4 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupPresentationIsMutable',
      5 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsIsInstanceOfArrayCollectionByDefault',
      6 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsCanAddDrugInterface',
      7 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsDoesNotAddDrugTwice',
      8 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDoesNotFindDrugWhenNotPresent',
      9 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupFindsDrugWhenPresent',
      10 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
      11 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugInterfaceIsFollowed',
      12 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsAccardResource',
      13 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIdIsUnsetOnCreation',
      14 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugNameIsMutable',
      15 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugPresentationIsMutable',
      16 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGenericAcceptsDrugInterface',
      17 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsGenericReturnsFalseWhenGenericPresent',
      18 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsGenericReturnsTrueWhenGenericIsNotPresent',
      19 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsIsInstanceOfArrayCollectionByDefault',
      20 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsCanAddDrugGroupInterface',
      21 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsDoesNotAddGroupTwice',
      22 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugDoesNotFindGroupWhenNotPresent',
      23 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsGroupWhenPresent',
      24 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveGroup',
      25 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandsIsInstanceOfArrayCollectionByDefault',
      26 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandCanAddDrugInterface',
      27 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandDoesNotAddBrandTwice',
      28 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugDoesNotFindBrandWhenNotPresent',
      29 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsBrandWhenPresent',
      30 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand',
      31 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenOnlyNameIsPresent',
      32 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenNameAndGenericIsPresent',
    ),
    72 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupInterfaceIsFollowed',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugIsAccardResource',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testGroupIdIsUnsetOnCreation',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupNameIsMutable',
      4 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupPresentationIsMutable',
      5 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsIsInstanceOfArrayCollectionByDefault',
      6 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsCanAddDrugInterface',
      7 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsDoesNotAddDrugTwice',
      8 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDoesNotFindDrugWhenNotPresent',
      9 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupFindsDrugWhenPresent',
      10 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
      11 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugInterfaceIsFollowed',
      12 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsAccardResource',
      13 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIdIsUnsetOnCreation',
      14 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugNameIsMutable',
      15 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugPresentationIsMutable',
      16 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGenericAcceptsDrugInterface',
      17 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsGenericReturnsFalseWhenGenericPresent',
      18 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsGenericReturnsTrueWhenGenericIsNotPresent',
      19 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsIsInstanceOfArrayCollectionByDefault',
      20 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsCanAddDrugGroupInterface',
      21 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsDoesNotAddGroupTwice',
      22 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugDoesNotFindGroupWhenNotPresent',
      23 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsGroupWhenPresent',
      24 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveGroup',
      25 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandsIsInstanceOfArrayCollectionByDefault',
      26 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandCanAddDrugInterface',
      27 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandDoesNotAddBrandTwice',
      28 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugDoesNotFindBrandWhenNotPresent',
      29 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsBrandWhenPresent',
      30 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand',
      31 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenOnlyNameIsPresent',
      32 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenNameAndGenericIsPresent',
    ),
    73 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupInterfaceIsFollowed',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugIsAccardResource',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testGroupIdIsUnsetOnCreation',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupNameIsMutable',
      4 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupPresentationIsMutable',
      5 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsIsInstanceOfArrayCollectionByDefault',
      6 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsCanAddDrugInterface',
      7 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsDoesNotAddDrugTwice',
      8 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDoesNotFindDrugWhenNotPresent',
      9 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupFindsDrugWhenPresent',
      10 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
      11 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugInterfaceIsFollowed',
      12 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsAccardResource',
      13 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIdIsUnsetOnCreation',
      14 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugNameIsMutable',
      15 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugPresentationIsMutable',
      16 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGenericAcceptsDrugInterface',
      17 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsGenericReturnsFalseWhenGenericPresent',
      18 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsGenericReturnsTrueWhenGenericIsNotPresent',
      19 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsIsInstanceOfArrayCollectionByDefault',
      20 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsCanAddDrugGroupInterface',
      21 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsDoesNotAddGroupTwice',
      22 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugDoesNotFindGroupWhenNotPresent',
      23 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsGroupWhenPresent',
      24 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveGroup',
      25 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandsIsInstanceOfArrayCollectionByDefault',
      26 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandCanAddDrugInterface',
      27 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandDoesNotAddBrandTwice',
      28 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugDoesNotFindBrandWhenNotPresent',
      29 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsBrandWhenPresent',
      30 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand',
      31 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenOnlyNameIsPresent',
      32 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenNameAndGenericIsPresent',
    ),
    80 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIdIsUnsetOnCreation',
    ),
    81 => NULL,
    88 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugNameIsMutable',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenOnlyNameIsPresent',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenNameAndGenericIsPresent',
    ),
    90 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugNameIsMutable',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenOnlyNameIsPresent',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenNameAndGenericIsPresent',
    ),
    91 => NULL,
    98 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugNameIsMutable',
    ),
    99 => NULL,
    106 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugPresentationIsMutable',
    ),
    108 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugPresentationIsMutable',
    ),
    109 => NULL,
    116 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugPresentationIsMutable',
    ),
    117 => NULL,
    124 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsIsInstanceOfArrayCollectionByDefault',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsCanAddDrugGroupInterface',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsDoesNotAddGroupTwice',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveGroup',
    ),
    125 => NULL,
    132 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsCanAddDrugInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsDoesNotAddDrugTwice',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupFindsDrugWhenPresent',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
      4 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsCanAddDrugGroupInterface',
      5 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsDoesNotAddGroupTwice',
      6 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugDoesNotFindGroupWhenNotPresent',
      7 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsGroupWhenPresent',
      8 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveGroup',
    ),
    133 => NULL,
    140 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsCanAddDrugInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsDoesNotAddDrugTwice',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupFindsDrugWhenPresent',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
      4 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsCanAddDrugGroupInterface',
      5 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsDoesNotAddGroupTwice',
      6 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsGroupWhenPresent',
      7 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveGroup',
    ),
    141 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsCanAddDrugInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsDoesNotAddDrugTwice',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupFindsDrugWhenPresent',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
      4 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsCanAddDrugGroupInterface',
      5 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsDoesNotAddGroupTwice',
      6 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsGroupWhenPresent',
      7 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveGroup',
    ),
    142 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsCanAddDrugInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsDoesNotAddDrugTwice',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupFindsDrugWhenPresent',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
      4 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsCanAddDrugGroupInterface',
      5 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsDoesNotAddGroupTwice',
      6 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsGroupWhenPresent',
      7 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveGroup',
    ),
    144 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsCanAddDrugInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsDoesNotAddDrugTwice',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupFindsDrugWhenPresent',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
      4 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsCanAddDrugGroupInterface',
      5 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsDoesNotAddGroupTwice',
      6 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsGroupWhenPresent',
      7 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveGroup',
    ),
    145 => NULL,
    152 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveGroup',
    ),
    153 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveGroup',
    ),
    154 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveGroup',
    ),
    156 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveGroup',
    ),
    157 => NULL,
    164 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsGenericReturnsFalseWhenGenericPresent',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsGenericReturnsTrueWhenGenericIsNotPresent',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenOnlyNameIsPresent',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenNameAndGenericIsPresent',
    ),
    165 => NULL,
    172 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGenericAcceptsDrugInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsGenericReturnsFalseWhenGenericPresent',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandCanAddDrugInterface',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandDoesNotAddBrandTwice',
      4 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsBrandWhenPresent',
      5 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand',
      6 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenNameAndGenericIsPresent',
    ),
    174 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGenericAcceptsDrugInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsGenericReturnsFalseWhenGenericPresent',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandCanAddDrugInterface',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandDoesNotAddBrandTwice',
      4 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsBrandWhenPresent',
      5 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand',
      6 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenNameAndGenericIsPresent',
    ),
    175 => NULL,
    182 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGenericAcceptsDrugInterface',
    ),
    183 => NULL,
    190 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandsIsInstanceOfArrayCollectionByDefault',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandCanAddDrugInterface',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandDoesNotAddBrandTwice',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand',
    ),
    191 => NULL,
    198 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandCanAddDrugInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandDoesNotAddBrandTwice',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugDoesNotFindBrandWhenNotPresent',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsBrandWhenPresent',
      4 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand',
    ),
    199 => 
    array (
    ),
    200 => NULL,
    202 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandCanAddDrugInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandDoesNotAddBrandTwice',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugDoesNotFindBrandWhenNotPresent',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsBrandWhenPresent',
      4 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand',
    ),
    203 => NULL,
    210 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandCanAddDrugInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandDoesNotAddBrandTwice',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsBrandWhenPresent',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand',
    ),
    211 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandCanAddDrugInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandDoesNotAddBrandTwice',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsBrandWhenPresent',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand',
    ),
    212 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandCanAddDrugInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandDoesNotAddBrandTwice',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsBrandWhenPresent',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand',
    ),
    213 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandCanAddDrugInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandDoesNotAddBrandTwice',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsBrandWhenPresent',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand',
    ),
    215 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandCanAddDrugInterface',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandDoesNotAddBrandTwice',
      2 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsBrandWhenPresent',
      3 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand',
    ),
    216 => NULL,
    223 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand',
    ),
    224 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand',
    ),
    225 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand',
    ),
    226 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand',
    ),
    228 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand',
    ),
    229 => NULL,
    236 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenOnlyNameIsPresent',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenNameAndGenericIsPresent',
    ),
    238 => 
    array (
      0 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenOnlyNameIsPresent',
      1 => 'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenNameAndGenericIsPresent',
    ),
    239 => NULL,
  ),
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Model/DrugablePrototypeInterface.php' => 
  array (
  ),
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Provider/DrugGroupProviderInterface.php' => 
  array (
  ),
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Provider/DrugProviderInterface.php' => 
  array (
  ),
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Repository/DrugGroupRepositoryInterface.php' => 
  array (
  ),
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Repository/DrugRepositoryInterface.php' => 
  array (
  ),
));
$coverage->setTests(array (
  'AccardTest\\Component\\Drug\\Exception\\DrugGroupNotFoundExceptionTest::testDrugGroupExceptionInterfaceIsFollowed' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Exception\\DrugGroupNotFoundExceptionTest::testDrugGroupNotFoundExceptionMessageIsCorrectWithNumericField' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Exception\\DrugGroupNotFoundExceptionTest::testDrugGroupNotFoundExceptionMessageIsCorrectWithNullField' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Exception\\DrugGroupNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWhenFieldIsNotNumericAndFieldIsPresent' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Exception\\DrugNotFoundExceptionTest::testDrugExceptionInterfaceIsFollowed' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Exception\\DrugNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWithNumericField' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Exception\\DrugNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWithNullField' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Exception\\DrugNotFoundExceptionTest::testDrugNotFoundExceptionMessageIsCorrectWhenFieldIsNotNumericAndFieldIsPresent' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupInterfaceIsFollowed' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugIsAccardResource' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testGroupIdIsUnsetOnCreation' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupNameIsMutable' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupPresentationIsMutable' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsIsInstanceOfArrayCollectionByDefault' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsCanAddDrugInterface' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDrugsDoesNotAddDrugTwice' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupDoesNotFindDrugWhenNotPresent' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupFindsDrugWhenPresent' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugGroupTest::testDrugGroupCanRemoveDrug' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugInterfaceIsFollowed' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsAccardResource' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIdIsUnsetOnCreation' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugNameIsMutable' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugPresentationIsMutable' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGenericAcceptsDrugInterface' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsGenericReturnsFalseWhenGenericPresent' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugIsGenericReturnsTrueWhenGenericIsNotPresent' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsIsInstanceOfArrayCollectionByDefault' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsCanAddDrugGroupInterface' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugGroupsDoesNotAddGroupTwice' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugDoesNotFindGroupWhenNotPresent' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsGroupWhenPresent' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveGroup' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandsIsInstanceOfArrayCollectionByDefault' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandCanAddDrugInterface' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugBrandDoesNotAddBrandTwice' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugDoesNotFindBrandWhenNotPresent' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugFindsBrandWhenPresent' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugCanRemoveBrand' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenOnlyNameIsPresent' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugTest::testDrugConvertsToExpectedFormatWhenNameAndGenericIsPresent' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugablePrototypeTraitTest::testDrugablePrototypeDoesNotAllowDrugByDefault' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugablePrototypeTraitTest::testDrugablePrototypeAllowDrugIsMutable' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugablePrototypeTraitTest::testDrugablePrototypeDrugGroupAcceptsDrugableInterface' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'AccardTest\\Component\\Drug\\Model\\DrugablePrototypeTraitTest::testDrugablePrototypeDrugGroupAcceptsNull' => 
  array (
    'size' => 'small',
    'status' => 0,
  ),
  'UNCOVERED_FILES_FROM_WHITELIST' => 
  array (
    'size' => 'unknown',
    'status' => NULL,
  ),
));

$filter = $coverage->filter();
$filter->setBlacklistedFiles(array (
));
$filter->setWhitelistedFiles(array (
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Exception/DrugException.php' => true,
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Exception/DrugGroupNotFoundException.php' => true,
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Exception/DrugNotFoundException.php' => true,
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Model/Drug.php' => true,
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Model/DrugablePrototypeInterface.php' => true,
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Model/DrugablePrototypeTrait.php' => true,
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Model/DrugGroup.php' => true,
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Model/DrugGroupInterface.php' => true,
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Model/DrugInterface.php' => true,
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Provider/DrugGroupProviderInterface.php' => true,
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Provider/DrugProviderInterface.php' => true,
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Repository/DrugGroupRepositoryInterface.php' => true,
  '/Users/piercedy/Projects/thoracic/vendor/accard/patient-repository/src/Component/Drug/Repository/DrugRepositoryInterface.php' => true,
));

return $coverage;